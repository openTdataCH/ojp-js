/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/ojp": {
    /**
     * Main /ojp endpoint 
     * @description Main /ojp endpoint
     */
    post: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/xml": {
              OJPResponse: {
                serviceDelivery: {
                  responseTimestamp: string;
                  producerRef: string;
                  OJPLocationInformationDelivery: {
                    responseTimestamp: string;
                    requestMessageRef?: string;
                    defaultLanguage?: string;
                    calcTime?: string;
                    placeResult: ({
                        place: {
                          stopPoint?: {
                            stopPointRef: string;
                            stopPointName: {
                              text: string;
                            };
                            plannedQuay?: {
                              text: string;
                            };
                            estimatedQuay?: {
                              text: string;
                            };
                          };
                          stopPlace?: {
                            stopPlaceRef?: string;
                            stopPlaceName?: {
                              text: string;
                            };
                          };
                          topographicPlace?: {
                            topographicPlaceCode: string;
                            topographicPlaceName: {
                              text: string;
                            };
                          };
                          pointOfInterest?: {
                            publicCode: string;
                            name: {
                              text: string;
                            };
                            pointOfInterestCategory: ({
                                osmTag?: {
                                  tag: string;
                                  value: string;
                                };
                              })[];
                            topographicPlaceRef?: string;
                          };
                          address?: {
                            publicCode: string;
                            name: {
                              text: string;
                            };
                            postCode?: string;
                            topographicPlaceName?: string;
                            TopographicPlaceRef?: string;
                            Street?: string;
                            HouseNumber?: string;
                          };
                          name: {
                            text: string;
                          };
                          geoPosition: {
                            longitude: number;
                            latitude: number;
                          };
                          mode: ("air" | "bus" | "coach" | "trolleyBus" | "metro" | "rail" | "tram" | "water" | "ferry" | "cableway" | "funicular" | "lift" | "other" | "unknown")[];
                        };
                        complete: boolean;
                        probability?: number;
                      })[];
                  };
                };
              };
            };
          };
        };
        /** @description Server error */
        500: never;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    PlaceResult: {
      place: {
        stopPoint?: {
          stopPointRef: string;
          stopPointName: {
            text: string;
          };
          plannedQuay?: {
            text: string;
          };
          estimatedQuay?: {
            text: string;
          };
        };
        stopPlace?: {
          stopPlaceRef?: string;
          stopPlaceName?: {
            text: string;
          };
        };
        topographicPlace?: {
          topographicPlaceCode: string;
          topographicPlaceName: {
            text: string;
          };
        };
        pointOfInterest?: {
          publicCode: string;
          name: {
            text: string;
          };
          pointOfInterestCategory: ({
              osmTag?: {
                tag: string;
                value: string;
              };
            })[];
          topographicPlaceRef?: string;
        };
        address?: {
          publicCode: string;
          name: {
            text: string;
          };
          postCode?: string;
          topographicPlaceName?: string;
          TopographicPlaceRef?: string;
          Street?: string;
          HouseNumber?: string;
        };
        name: {
          text: string;
        };
        geoPosition: {
          longitude: number;
          latitude: number;
        };
        mode: ("air" | "bus" | "coach" | "trolleyBus" | "metro" | "rail" | "tram" | "water" | "ferry" | "cableway" | "funicular" | "lift" | "other" | "unknown")[];
      };
      complete: boolean;
      probability?: number;
    };
    OJPLocationInformationDelivery: {
      responseTimestamp: string;
      requestMessageRef?: string;
      defaultLanguage?: string;
      calcTime?: string;
      placeResult: ({
          place: {
            stopPoint?: {
              stopPointRef: string;
              stopPointName: {
                text: string;
              };
              plannedQuay?: {
                text: string;
              };
              estimatedQuay?: {
                text: string;
              };
            };
            stopPlace?: {
              stopPlaceRef?: string;
              stopPlaceName?: {
                text: string;
              };
            };
            topographicPlace?: {
              topographicPlaceCode: string;
              topographicPlaceName: {
                text: string;
              };
            };
            pointOfInterest?: {
              publicCode: string;
              name: {
                text: string;
              };
              pointOfInterestCategory: ({
                  osmTag?: {
                    tag: string;
                    value: string;
                  };
                })[];
              topographicPlaceRef?: string;
            };
            address?: {
              publicCode: string;
              name: {
                text: string;
              };
              postCode?: string;
              topographicPlaceName?: string;
              TopographicPlaceRef?: string;
              Street?: string;
              HouseNumber?: string;
            };
            name: {
              text: string;
            };
            geoPosition: {
              longitude: number;
              latitude: number;
            };
            mode: ("air" | "bus" | "coach" | "trolleyBus" | "metro" | "rail" | "tram" | "water" | "ferry" | "cableway" | "funicular" | "lift" | "other" | "unknown")[];
          };
          complete: boolean;
          probability?: number;
        })[];
    };
    OJP: {
      OJPResponse: {
        serviceDelivery: {
          responseTimestamp: string;
          producerRef: string;
          OJPLocationInformationDelivery: {
            responseTimestamp: string;
            requestMessageRef?: string;
            defaultLanguage?: string;
            calcTime?: string;
            placeResult: ({
                place: {
                  stopPoint?: {
                    stopPointRef: string;
                    stopPointName: {
                      text: string;
                    };
                    plannedQuay?: {
                      text: string;
                    };
                    estimatedQuay?: {
                      text: string;
                    };
                  };
                  stopPlace?: {
                    stopPlaceRef?: string;
                    stopPlaceName?: {
                      text: string;
                    };
                  };
                  topographicPlace?: {
                    topographicPlaceCode: string;
                    topographicPlaceName: {
                      text: string;
                    };
                  };
                  pointOfInterest?: {
                    publicCode: string;
                    name: {
                      text: string;
                    };
                    pointOfInterestCategory: ({
                        osmTag?: {
                          tag: string;
                          value: string;
                        };
                      })[];
                    topographicPlaceRef?: string;
                  };
                  address?: {
                    publicCode: string;
                    name: {
                      text: string;
                    };
                    postCode?: string;
                    topographicPlaceName?: string;
                    TopographicPlaceRef?: string;
                    Street?: string;
                    HouseNumber?: string;
                  };
                  name: {
                    text: string;
                  };
                  geoPosition: {
                    longitude: number;
                    latitude: number;
                  };
                  mode: ("air" | "bus" | "coach" | "trolleyBus" | "metro" | "rail" | "tram" | "water" | "ferry" | "cableway" | "funicular" | "lift" | "other" | "unknown")[];
                };
                complete: boolean;
                probability?: number;
              })[];
          };
        };
      };
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
