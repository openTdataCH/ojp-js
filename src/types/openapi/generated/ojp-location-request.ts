/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/ojp": {
    /**
     * Main /ojp endpoint 
     * @description Main /ojp endpoint
     */
    post: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/xml": {
              OJPRequest: {
                serviceRequest: {
                  serviceRequestContext?: {
                    language?: string;
                  };
                  requestTimestamp: string;
                  requestorRef: string;
                  OJPLocationInformationRequest?: {
                    requestTimestamp: string;
                    initialInput?: {
                      name?: string;
                      geoRestriction?: {
                        rectangle: {
                          upperLeft: {
                            longitude: number;
                            latitude: number;
                          };
                          lowerRight: {
                            longitude: number;
                            latitude: number;
                          };
                        };
                      };
                    };
                    placeRef?: {
                      stopPointRef?: string;
                      stopPlaceRef?: string;
                      geoPosition?: {
                        longitude: number;
                        latitude: number;
                      };
                      name: {
                        text: string;
                      };
                    };
                    restrictions?: {
                      type: ("stop" | "address" | "poi" | "location" | "topographicPlace")[];
                      numberOfResults?: number;
                      includePtModes?: boolean;
                    };
                  };
                };
              };
            };
          };
        };
        /** @description Server error */
        500: never;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    PlaceParam: {
      type: ("stop" | "address" | "poi" | "location" | "topographicPlace")[];
      numberOfResults?: number;
      includePtModes?: boolean;
    };
    InitialInput: {
      name?: string;
      geoRestriction?: {
        rectangle: {
          upperLeft: {
            longitude: number;
            latitude: number;
          };
          lowerRight: {
            longitude: number;
            latitude: number;
          };
        };
      };
    };
    OJPLocationInformationRequest: {
      requestTimestamp: string;
      initialInput?: {
        name?: string;
        geoRestriction?: {
          rectangle: {
            upperLeft: {
              longitude: number;
              latitude: number;
            };
            lowerRight: {
              longitude: number;
              latitude: number;
            };
          };
        };
      };
      placeRef?: {
        stopPointRef?: string;
        stopPlaceRef?: string;
        geoPosition?: {
          longitude: number;
          latitude: number;
        };
        name: {
          text: string;
        };
      };
      restrictions?: {
        type: ("stop" | "address" | "poi" | "location" | "topographicPlace")[];
        numberOfResults?: number;
        includePtModes?: boolean;
      };
    };
    OJP: {
      OJPRequest: {
        serviceRequest: {
          serviceRequestContext?: {
            language?: string;
          };
          requestTimestamp: string;
          requestorRef: string;
          OJPLocationInformationRequest?: {
            requestTimestamp: string;
            initialInput?: {
              name?: string;
              geoRestriction?: {
                rectangle: {
                  upperLeft: {
                    longitude: number;
                    latitude: number;
                  };
                  lowerRight: {
                    longitude: number;
                    latitude: number;
                  };
                };
              };
            };
            placeRef?: {
              stopPointRef?: string;
              stopPlaceRef?: string;
              geoPosition?: {
                longitude: number;
                latitude: number;
              };
              name: {
                text: string;
              };
            };
            restrictions?: {
              type: ("stop" | "address" | "poi" | "location" | "topographicPlace")[];
              numberOfResults?: number;
              includePtModes?: boolean;
            };
          };
        };
      };
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
